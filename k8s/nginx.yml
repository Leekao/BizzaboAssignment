apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-reverse-proxy
  template:
    metadata:
      labels:
        app: nginx-reverse-proxy
    spec:
      initContainers:
      - name: nginx-waiter
        # for the reverse proxy to work 100% of the time we need to start Nginx after the service is visible and responsive
        image: alpine
        command: ['sh', '-c', 'until nslookup bizzabo-app-service.default.svc.cluster.local; do echo waiting for bizzabo; sleep 2; done;']
      containers:
      - name: nginx
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-config-volume
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  selector:
    app: nginx-reverse-proxy
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  #This needs to be changed to a LoadBalancer when deploying not locally
  type: NodePort